<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hywa.pricepublish.dao.mapper.PriceCollectionMapper">
    <resultMap id="BaseResultMap" type="com.hywa.pricepublish.dao.entity.PriceCollection">
        <id column="id" property="id" jdbcType="CHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="create_user" property="createUser" jdbcType="CHAR"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
        <result column="procudt_id" property="procudtId" jdbcType="CHAR"/>
        <result column="price" property="price" jdbcType="DECIMAL"/>
        <result column="price_type" property="priceType" jdbcType="SMALLINT"/>
        <result column="market_id" property="marketId" jdbcType="CHAR"/>
        <result column="product_id" property="productId" jdbcType="CHAR"/>
        <result column="history_id" property="historyId" jdbcType="CHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, name, create_time, update_time, create_user, description, procudt_id, price, 
    price_type, market_id, product_id
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.hywa.pricepublish.dao.entity.PriceCollectionExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from price_collection
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from price_collection
        where id = #{id,jdbcType=CHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from price_collection
    where id = #{id,jdbcType=CHAR}
  </delete>
    <delete id="deleteByExample" parameterType="com.hywa.pricepublish.dao.entity.PriceCollectionExample">
        delete from price_collection
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.hywa.pricepublish.dao.entity.PriceCollection">
    insert into price_collection (id, name, create_time, 
      update_time, create_user, description, 
      procudt_id, price, price_type, 
      market_id, product_id)
    values (#{id,jdbcType=CHAR}, #{name,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=CHAR}, #{description,jdbcType=VARCHAR}, 
      #{procudtId,jdbcType=CHAR}, #{price,jdbcType=DECIMAL}, #{priceType,jdbcType=SMALLINT}, 
      #{marketId,jdbcType=CHAR}, #{productId,jdbcType=CHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.hywa.pricepublish.dao.entity.PriceCollection">
        insert into price_collection
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="createUser != null">
                create_user,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="procudtId != null">
                procudt_id,
            </if>
            <if test="price != null">
                price,
            </if>
            <if test="priceType != null">
                price_type,
            </if>
            <if test="marketId != null">
                market_id,
            </if>
            <if test="productId != null">
                product_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=CHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUser != null">
                #{createUser,jdbcType=CHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="procudtId != null">
                #{procudtId,jdbcType=CHAR},
            </if>
            <if test="price != null">
                #{price,jdbcType=DECIMAL},
            </if>
            <if test="priceType != null">
                #{priceType,jdbcType=SMALLINT},
            </if>
            <if test="marketId != null">
                #{marketId,jdbcType=CHAR},
            </if>
            <if test="productId != null">
                #{productId,jdbcType=CHAR},
            </if>
        </trim>
    </insert>
    <insert id="insertBatch">
        INSERT into price_collection (id,create_time,create_user,market_id,update_time,procudt_id,price)
        values
        <foreach collection="list" item="priceCollection" separator=",">
            (#{priceCollection.id}, #{priceCollection.createTime},
            #{priceCollection.createUser},#{priceCollection.marketId},
            #{priceCollection.updateTime},#{priceCollection.procudtId},
            #{priceCollection.price})
        </foreach>
    </insert>
    <select id="countByExample" parameterType="com.hywa.pricepublish.dao.entity.PriceCollectionExample"
            resultType="java.lang.Integer">
        select count(*) from price_collection
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update price_collection
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=CHAR},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.createUser != null">
                create_user = #{record.createUser,jdbcType=CHAR},
            </if>
            <if test="record.description != null">
                description = #{record.description,jdbcType=VARCHAR},
            </if>
            <if test="record.procudtId != null">
                procudt_id = #{record.procudtId,jdbcType=CHAR},
            </if>
            <if test="record.price != null">
                price = #{record.price,jdbcType=DECIMAL},
            </if>
            <if test="record.priceType != null">
                price_type = #{record.priceType,jdbcType=SMALLINT},
            </if>
            <if test="record.marketId != null">
                market_id = #{record.marketId,jdbcType=CHAR},
            </if>
            <if test="record.productId != null">
                product_id = #{record.productId,jdbcType=CHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update price_collection
        set id = #{record.id,jdbcType=CHAR},
        name = #{record.name,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
        create_user = #{record.createUser,jdbcType=CHAR},
        description = #{record.description,jdbcType=VARCHAR},
        procudt_id = #{record.procudtId,jdbcType=CHAR},
        price = #{record.price,jdbcType=DECIMAL},
        price_type = #{record.priceType,jdbcType=SMALLINT},
        market_id = #{record.marketId,jdbcType=CHAR},
        product_id = #{record.productId,jdbcType=CHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.hywa.pricepublish.dao.entity.PriceCollection">
        update price_collection
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUser != null">
                create_user = #{createUser,jdbcType=CHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="procudtId != null">
                procudt_id = #{procudtId,jdbcType=CHAR},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=DECIMAL},
            </if>
            <if test="priceType != null">
                price_type = #{priceType,jdbcType=SMALLINT},
            </if>
            <if test="marketId != null">
                market_id = #{marketId,jdbcType=CHAR},
            </if>
            <if test="productId != null">
                product_id = #{productId,jdbcType=CHAR},
            </if>
        </set>
        where id = #{id,jdbcType=CHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.hywa.pricepublish.dao.entity.PriceCollection">
    update price_collection
    set name = #{name,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=CHAR},
      description = #{description,jdbcType=VARCHAR},
      procudt_id = #{procudtId,jdbcType=CHAR},
      price = #{price,jdbcType=DECIMAL},
      price_type = #{priceType,jdbcType=SMALLINT},
      market_id = #{marketId,jdbcType=CHAR},
      product_id = #{productId,jdbcType=CHAR}
    where id = #{id,jdbcType=CHAR}
  </update>
</mapper>